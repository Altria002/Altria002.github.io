<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿尔托莉雅</title>
  
  <subtitle>呆毛王</subtitle>
  <link href="https://altria5401.eu.org/atom.xml" rel="self"/>
  
  <link href="https://altria5401.eu.org/"/>
  <updated>2024-03-29T14:37:08.614Z</updated>
  <id>https://altria5401.eu.org/</id>
  
  <author>
    <name>Altria Pendragon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>免费服务器续期表</title>
    <link href="https://altria5401.eu.org/blog/90e4f7e/"/>
    <id>https://altria5401.eu.org/blog/90e4f7e/</id>
    <published>2024-03-29T14:37:08.614Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="e77fb914e1145aa75118fa6b97455cf0172adf408e41eff7a8a488c6fa556912">3e6ed06ba39811e73eae695f954972f020cd3b416ed5dae03288f6e3a40e0f9861714f2bbfda755197972d2ce9339cc57988328d015f526b9fdaed64fdfc5dff4d35f19c5e7664b2e93b1e167d8e035f8ea5d5d81c9054ec27299cce969b54ac5bde1edd91506064c49ff88d34eb5384f2779a3e195d8b28ae88e43658d6d595c6a313af6bf9dc8ebbae2ba281d9ebe21c68e214ea5cc1b39dcf07342db7673dc44af2a1c73aca384c36ee6b87a290116386c79ccd0ddb687cd473676447d30b01a1462edfac11a82c3c8deff06990e8a7826965e9d5bd677df2b70817cfc898aa228793ab47a3fb0c81df3b9a75c4081fecb83e49c59ae07f9c321cb45967a7f01d13ad23dd7259f9d24358877f24a536d741914c8b4f1a0d7565c566306e6a516f349252f0b468e5d57e59ac869cd8b1ffcdc9e844d89171aff8e0bb1b6da243ea28b78ae5a03d71cc9c49e29412cd0c4bcf9a422c87bccbb21b75d190eb6ca4c73ce42f342c03d031a56ff264d3daa5154d0744436a24fb6a6064e1194f4ff628426a4ff14fb3a2ac63a84d333eca57466b7b3610066ab6b132c447ce4f970e025f984b7773e5d8854a6da20f18c34cd86e88bf0b2ed8a18212b30d426d543100ddd756943c405b6adaaa960ee4716641b2ddcd1d88b36462e8f70d84c3e142a0b951c54caeb880d5ed0f27f03882c479e5f12d68c4acb6bcd8d99de1cce30414214701d0346094a4d054189c11fcbd7154de464ff8b66068b6883c2cd0753e39872b9b32c6e9b44e43f1d68c1bef32dcc893706cdd61908585f1fe9d1554dedb4a7887e4130aba4a8b8173a43d36e8441a9f0a3f5cf61a83b7b12ea26606253e445303caf49a4525fb99e395264f4fbf9c19de04e5f4fe741e13dec3a81ced9eb3d1742e868de484c2f21b8242c7167cff93d8fde3703dbabedb87abc9c00720c522ed524c8e7b157be8791f20e188077e11e9a7014b398ad3fd242ac40f7680b04a9fdafca16ee6fe9d4f239b4f75cbb5c678a27c2e599efa3d1d7329e137c30859e82f2403c767fad20577da79c802102d81a7cef07757e42615293dfd92ebceff9dc717468dd2b1020b3adfc73a91eb9fc1f458c5a51e98cace777fead2a99d6ec1c7cfeb0c2e33c86aec65ab387962cb5468189e96b7fcbfa8d33cdd303182935a125bc0626f62e813512d41bf2ccbf40104784961889782ba24a1c289205712d2ede93a13afda80433bb3ead77af3a9401cc02c95ab56e7fecf6afcfbadb66aa228732b4bc7c2c91412c5d24a8d7cef2e6bd865e9e5e89a31d710a3d06463044312df79cc63eaa7d3b9f4174750b6a2a7d6d43ef6614689d0e8968e513cc6c93c6137e5fe8048a0328b41d40ca3c3957a74ab5784b33adb77ec5d91d3835ecf8c5b327c367c98cd2d425ee2174d9411ef7aa0e94379c43485c8ba2c7f61c2fbb6cae8049788118d4d78ea3cb20ea718ff3ff6738d1ff75e91c5c1c545530462bf3201df93503fa95e91dc2d9cab225fd0e6a609d618c8ae4ab1c602f57d1642f9673a885f81610d86331f20d89c5677436b0401a8beabb22b5bf904cad4fe0aa1d7717254d1bb2f5fc4e382945802245fff5295de2afe15c84a27dbb9abf9771d88eedcb4ecaecf727ced02cdda8a3424b5dfafecfc3c091c79a9c97be5744b2e0bb935b9101f0a687b3034641228ad590f5b0eb2d8694c17f68659aafa49ae0c69f6a55a6839fd270b8502b618bf9a33a3f5f6861dba6d756ecf24d5c0d03e176b47fbbf33e3dee69a41e86be64a62557d2dd9e3d24dff3726c624cfc111059efb48d5edac6da0aa97859a82b2a0c9cc813906b4d9179f7b90b473b138a0c85c506d1225a95d2d270b4d6986f781f29eb66e8d85c7eab33e47229467bde6e98929e9e2aaa787cfa63c4fbdeb39a9110c160ebf82436d8cebf17331edd011d626dbd81e139bef6423ef06b33eed249b5461025efa4d4b9af969880d8f68f12175c9e46ecbaf85d3daf1e02fab6afb467ba496b6c3ad643356a8748323a0d4d3510844461e1b9837669754d499892eae25e2ea83ed2955749647e083d94e856afadc0c6e4b6f6e97fbe615313d186d032811ba4211721c8ce9d89a9dfb3d40a84039fd16f979a4b4cf7d5ebd190addb1ed2d4f23403a61a68b453af7ae6b98f13761b79f3a4269c7a359f1f24a08a67413279a493bbdb2df881b199f7663ffc2b3e8ab2a5c48af1129c16eb02141baa9ad07e78e8f79939d805f9ae34becb8d4522f54f4577f4af4f8161375f59d15413edf5b1c9e9fff1ccb304a0f68d487bc4c2031f6e42dab7b09bbf3c7ceebaaf78186a341b45ed9408fa38c758191059fc5338b1c7b86541f65428d504e0a3e4e50dac5bb26e8d26b3295ef2ae89121e84ba613beb9a3d0939e91874d624b53d1fc86450b0902e6a16b23d6177101ecc1c14c44ffb44af00dbcec20b57671fd6eaad91f929b582b2ae838418dbebd35bd39d8431bf54270d810556fbd948e299daf49d2ec715c889a3a03489db7ece460c4a22d99199abc3592c8b84210867ed80dc4c46ae03a8057efae12e763bc002dea5b0b9cb4790ebfea88aaecd52fb986f5b7b551f8a46956cb0e923d162a6b1caabfcf258e8adcf1d645303bd74bec00716959319e1f64571e25d2cb9b0cbd69d5c789217e59dca51f09ac5e7e2799abcacb46065e26956983468949b1ac25990625ee26114b03ca26f4a24a9e2102466b8ba8e9e852e5ddd44353f0e3eeeaf3733a7e7dddb623a02d07e59f19095d36b85af0601ce180bd2dc08f5a9861d02e66ee89bfeb1c268cfbdca26f7d13d072fa8bf443402e910a573225b28462885ea61e6d48683848bf68e5392a6e2e6e79689e3a42f8431e0fee7c46f7565798d7c4f4c4eb3c08b841bde608789b169c956fb58e04aa59f3e1b8d3ec15c9b2916c97ce460ab7d809bbe9b11af4fa4d5d4587e588f0c9066eb8c3b8a9f9dfd47d5a5fb9984aee9ab30e0dd9f8649a605df776176bc626e962987f10e676bdb6264e7a79dc116c6fe9f4fd3777f484d8c841cf0457407e0dade1ffe6c943b107040bc94439492b005271e51d40432f2359706266e46f1ee1cda53679479786dfa1f5f32a5db636a62c892622c951537e7f0b39a14a3136f35317fa6271bdaecc3f9f570732fb84c9f62f88a6c3207c47c73142d3aa5696fab4ebbfb9a01bef2396c842baa0923ab9cd1441381f0176a135d9ccdb67560140f006d2bd6804cac08b883f942c73ec9bee1b3eab4e36e397c25a0978d883e4f12bcb94aacbb7534914477ad792ffd012dde467b9b4a1aee8a233c35b24f3fb509c18c584de8e201a6599d94e89ed56693b406a9869fc5705282b4e574c9c6ffa53d9675fdb580ad1f4cde00bbf316aeb2c25f2dc50a4aa4aed68c463d24db0b2042ef5103f04aa8f8b83918699302bb78b751dbd09a466d0ed6ebfebb3ef0e38ae0bf10c8266f0a9d395733ab4145d1655f8c3c43f3cb90f3169bcc8dd005bf7d1a668539dc4bb70f34fea26fab271d43cbde64271358fb68933af02e3ce5e771c313c606e7eb00de08249fe56c3cce597adcf63a24fc88e226c62cb52a0e7ce6fbcb75d12c2039a9b7e4bd4de6439a1fc0308e636719640147b3ca00d9c7f1e3e11145c406f7ced66e28b50b155c900898d78ee0827ade495608530c5b1f1a61d23250481c07b5eef8aa9e46ef85e596a105b6192c963192c2d045307ce2a99febc65b5328243ef6a298f041d92f636e94175d8af727cd7741a22f145f4a784e48eab1a5b9ad9756db23f976fd8d11159a133b156a6c976bbdd01f3fdadc6004d670e5c013baa21d48e97d7648204bc52b2abcec92275250338aa9abce3c9c30d7f3d017b6beacbec1eb521ea4081766fa0a15ca546edef6b61e2dc3b700914912ba0b6d5b50453ec699d2e71146c81b9a189a2333c8562367f11c2c42acb8f4fa3b637c6457d68177d2e70211dac3071d27de2e45dc58bdf75ea9793f0ee4dcbfd9abbec2fe8e1b066f7d9c21c518d457a40cdba3a19418efc449142e80796a9fa5125208c7cae6c3c2ba5e37c9c7ea029a9137a12205fe4b9dfc4a8bb8598265e005dcde010d0350502bcbaeba65ecc72357bebe6c9ab9751518e093e23f93ed5b64acbcaa43f56f2249db0875ce7ac72b6e7a951158503f9316ebd7d4cfef7a75cae5b134a7c9ecb00637950bb748e5cf7c3ab6b919183c8419d3384608319bf8854799da0c8c57fa51da123a7c100ece316b43ea18a9c64a26bfdc708abd1d0cea913898fd090783637dafcc4a84297ddff10c65c462a329f336078e374e05f1e21983e53132498734c958f5a1a636bb49c2953521d4b2f144f7987de53e99fcda148992688b8dbf1271597562a3cfaf9650add097e2ad45feb1834c40d1026551cf45f165e27599e1017269eccede326a4f08be43fd971d4d66382cedc6b481387dc8299d24c0c32b85146a957c8ef5bbeca1094cc5ff7624f9359ac7ecde648da3f7760b8b5d19b1c633df04f9736e9b310dc97f146a11fc2a19755ffe9344114488ee80caab95e4dd823cb215c768e15aa487eeaad74d0a7acc9af21e965b0cdd0f35481559deebc16d8ce7a41e2aa6d27797216549e0fd71e210abfb04b4be32353c9e71827608ab002ae9f4daa0a371957158a6ad61dee864ef148f04ce231c4b5402d9ca4f3fbafc33da8785102382f82b9eaa5855c6f423b9b9a25f83dfeef346d78d573d70be95723b560018c710edcd026e9d5753467442107a05f741f37e1ae4b030617644df90ca41b61a53fe90a6230dd57844d501a390e55f25c8f2370516cb9b69a16d6985092431d625f0fae86ddbb9987484662c6f61838d3c5518786efb3820ef6f3c902437b68ef9886533ca5fa34bf9b899f40206095dcd33273c29e3b4ee3d33600006dfc8206d4c5e0798e54583bae168a6c27dccae1f732a407a2dde23bd8095d1b2e58cb852254404fd9253db8975e9f030c0d9e9677d92dbdbbc6e6b2097189ff0b8f2885cff1272b407d5a1ffe4eccd638839b44eb607570c3030c5a4103d4f3eedf921565dd2c8291756314ac50a3029652e50d3f047e6294408ee490f31bb51b7fb6ea1b6040f12ffece34c97ab3641471488ce96f355859a5db229aa4d733ebab5eb338a6377f3e11b337a3c26c025cfdeebcdefcf4501a91a5945ad91bf49b0fd617beabc04bdfca2e2915e7c549e78f56b0a7bb4123f56e0d802202a030a72c8a83ed90f090fc2272dfd32a8d267bc43d1f2ae21e562b7f5c39f308b11186bf74ea411c1ea157a919f36d55a1eec24b99d5bb18a9910b97e2def9bbbb32ef2d89105aa53fc569cc6d83d1a6ff94fabc711a8e590d5b704ccb62ead9a532dc0cb9eb5cae858a2c176409d524fdfab1445fe3f5e2f23381734ce3de453e1a670c52d11751ec5f381a25015c76db5327997221c02fbb6a292f7b949cdb3a75e634a10051880f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入访问密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是一篇加密文章，需要输入正确的密码才能继续阅读。</summary>
    
    
    
    <category term="vps" scheme="https://altria5401.eu.org/categories/vps/"/>
    
    
    <category term="hax" scheme="https://altria5401.eu.org/tags/hax/"/>
    
    <category term="woiden" scheme="https://altria5401.eu.org/tags/woiden/"/>
    
    <category term="vc" scheme="https://altria5401.eu.org/tags/vc/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://altria5401.eu.org/blog/4a17b156/"/>
    <id>https://altria5401.eu.org/blog/4a17b156/</id>
    <published>2024-03-29T14:37:08.614Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>xui+argo部署节点教程</title>
    <link href="https://altria5401.eu.org/blog/5367aadf/"/>
    <id>https://altria5401.eu.org/blog/5367aadf/</id>
    <published>2024-03-29T14:37:08.614Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>woiden是继hax后的免费服务器站点。本教程正是基于此，通过xui+argo的方式部署vless节点。</p><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一台VPS<br>2.一个域名<br>3.一个Cloudflare账号</p><h1 id="部署实操"><a href="#部署实操" class="headerlink" title="部署实操"></a>部署实操</h1><p>1.安装xui面板<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><br><div class="note info simple"><p>如提示超出github api限制，请安装warp</p></div><br>2.安装argo脚本并配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/taffychan/argo/main/argo.sh &amp;&amp; bash argo.sh</span><br></pre></td></tr></table></figure><br>3.新建一个节点</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="云服务器" scheme="https://altria5401.eu.org/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="节点" scheme="https://altria5401.eu.org/tags/%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>哪吒探针部署教程</title>
    <link href="https://altria5401.eu.org/blog/20155961/"/>
    <id>https://altria5401.eu.org/blog/20155961/</id>
    <published>2024-03-29T14:37:08.614Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>当你苦于管理多个云服务器时，看看哪吒探针吧。哪吒监控，一个开源、轻量的服务器和网站监控、运维工具。</p><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一台VPS<br>2.一个域名<br>3.一个Github/Gitee账号</p><h1 id="部署实操"><a href="#部署实操" class="headerlink" title="部署实操"></a>部署实操</h1><p>1.托管域名至cloudflare，并对其进行解析。<br><div class="note info simple"><p>一个打开小云朵用作公开访问，另一个域名不要打开小云朵，用作Agent端与Dashboard的通信<br>本教程分别以 “cdn.example.com” 和 “data.example.com” 两个域名来演示。<br>两个先都别打开小云朵</p></div><br>2.登录github，打开<a href="https://github.com/settings/apps">开发者设置</a>，新建一个outh应用，记下Client ID 和 Client secret。<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/哪吒探针/002.png" alt=""><br>3.打开FinalShell，连接服务器，安装面板。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/naiba/nezha/master/script/install.sh  -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo ./nezha.sh</span><br></pre></td></tr></table></figure><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/哪吒探针/003.png" alt=""><br>4.现在你可以访问域名+端口号，如 “<a href="http://cdn.example.com:8008”">http://cdn.example.com:8008”</a> 来查看面板<br><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>此时会提示连接不安全以及需要输入端口号</p></div><br>5.打开宝塔面板，添加公开访问域名，如 “cdn.example.com“，添加一个ssl证书，并配置反向代理。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">location /</span><br><span class="line">&#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8008;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">&#125;</span><br><span class="line">location /ws</span><br><span class="line">&#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8008;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;Upgrade&quot;;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">&#125;</span><br><span class="line">location /terminal</span><br><span class="line">&#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8008;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;Upgrade&quot;;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>6.返回github，将Homepage URL”和”Authorization callback URL”中的域名全部从http改为https，如：”<a href="https://cdn.example.com">https://cdn.example.com</a>“ 和 “<a href="https://cdn.example.com/oauth2/callback">https://cdn.example.com/oauth2/callback</a>“ 。<br>7.登录面板，添加一台服务器，并建立连接<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/哪吒探针/004.png" alt=""><br><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>此时服务器还未连接</p></div><br>将未打开小云朵的域名填入图示地方，找到一键安装命令，拷贝左边这个，粘贴至服务器上安装。<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/哪吒探针/005.png" alt=""><br>8.设置通知方式，添加报警通知<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/哪吒探针/006.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/哪吒探针/007.png" alt=""><br>至此，部署完成<br>参考资料：<a href="https://nezhahq.github.io/guide/dashboard.html">https://nezhahq.github.io/guide/dashboard.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="建站" scheme="https://altria5401.eu.org/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="哪吒探针" scheme="https://altria5401.eu.org/tags/%E5%93%AA%E5%90%92%E6%8E%A2%E9%92%88/"/>
    
    <category term="服务器监控" scheme="https://altria5401.eu.org/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>Speedtest项目搭建教程</title>
    <link href="https://altria5401.eu.org/blog/8cc78405/"/>
    <id>https://altria5401.eu.org/blog/8cc78405/</id>
    <published>2022-05-24T10:28:18.000Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一个域名<br>2.一台vps</p><h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><p>1.连接vps，安装宝塔面板<br>Centos安装宝塔面板脚本：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://v7.hostcli.com/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><br>ubuntu安装宝塔面板脚本：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://v7.hostcli.com/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><br><div class="note info simple"><p>记得放行8888端口</p></div><br>2.打开<a href="https://dash.cloudflare.com/">cloudflare</a>,添加一个站点并增加一条A记录解析<br><div class="note info simple"><p>不要打开小云朵哦</p></div><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/Speedtest-X/speedtest测速项目搭建教程图片2.png" alt=""><br>3.下载<a href="https://github.com/BadApple9/speedtest-x/archive/refs/tags/20201222.zip">speedtest源码</a>并解压<br>4.打开宝塔面板，输入账号密码登录，单击网站并添加站点，输入解析好的域名，其他默认<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/Speedtest-X/speedtest测速项目搭建教程图片5.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/Speedtest-X/speedtest测速项目搭建教程图片3.png" alt=""><br><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>忘记账号密码可以在VPS输入bt default</p></div><br>5.打开网站，添加ssl证书，选上强制ssl<br>6.点击文件，找到网站文件夹，删除原有的内容，将解压后的文件粘贴到此处<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/Speedtest-X/speedtest测速项目搭建教程图片4.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/建站/Speedtest-X/speedtest测速项目搭建教程图片6.png" alt=""><br>7.将example-singleServer-pretty.html文件重命名为index.html，至此测速站完成搭建<br><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>如需自定义，可以对index.html文件编辑</p></div></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="建站" scheme="https://altria5401.eu.org/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Speedtest" scheme="https://altria5401.eu.org/tags/Speedtest/"/>
    
    <category term="测速" scheme="https://altria5401.eu.org/tags/%E6%B5%8B%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>CloudFlare支持的HTTP/HTTPS代理端口</title>
    <link href="https://altria5401.eu.org/blog/b0a089cf/"/>
    <id>https://altria5401.eu.org/blog/b0a089cf/</id>
    <published>2022-05-23T12:59:27.000Z</published>
    <updated>2024-03-29T14:37:08.610Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在使用宝塔的服务器，配置了CF的CDN后，通过域名加端口方式想访问宝塔面板，可能就会访问不了，这是因为CF默认只开放部分端口，不是全端口开放。</p><p>对于一些在偏远地区、国内访问非常慢的机器，可能直接通过IP访问宝塔面板会非常慢，这个时候就可以考虑利用CF来加速宝塔面板，原理就是将宝塔的端口设置为CF支持的端口，然后使用套了CF CDN的域名+端口来访问，这个时候宝塔就能得到CF的加速了</p><p>下面我们来了解一下CloudFlare支持的HTTP/HTTPS代理端口</p><h1 id="HTTP可用端口"><a href="#HTTP可用端口" class="headerlink" title="HTTP可用端口"></a>HTTP可用端口</h1><ul><li>80</li><li>8080</li><li>8880</li><li>2052</li><li>2082</li><li>2086</li><li>2095</li></ul><h1 id="HTTPS可用端口"><a href="#HTTPS可用端口" class="headerlink" title="HTTPS可用端口"></a>HTTPS可用端口</h1><ul><li>443</li><li>2053 </li><li>2083</li><li>2087</li><li>2096</li><li>8443</li></ul><p>参考资料：<a href="https://developers.cloudflare.com/fundamentals/get-started/network-ports/">https://developers.cloudflare.com/fundamentals/get-started/network-ports/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="vps" scheme="https://altria5401.eu.org/categories/vps/"/>
    
    
    <category term="CloudFlare" scheme="https://altria5401.eu.org/tags/CloudFlare/"/>
    
  </entry>
  
  <entry>
    <title>Nginx反向代理教程</title>
    <link href="https://altria5401.eu.org/blog/f2895ff3/"/>
    <id>https://altria5401.eu.org/blog/f2895ff3/</id>
    <published>2022-05-23T12:59:27.000Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Nginx（发音同“engine X”）是异步框架的网页服务器，也可以用作反向代理、负载平衡器和HTTP缓存。下面我就教大家利用反向代理实现域名访问网站。</p><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一台服务器<br>2.一个cloudflare账号<br>3.一个域名</p><h1 id="部署实操"><a href="#部署实操" class="headerlink" title="部署实操"></a>部署实操</h1><p>1.<a href="https://www.freenom.com/zh/index.html?lang=zh">申请一个域名</a>,并将其托管到<a href="https://dash.cloudflare.com/login">cloudflare</a>进行DNS解析。<br><div class="note info simple"><p>不要打开小云朵哟</p></div><br>2.打开FinalShell，连接云服务器，申请一个ssl证书<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo -i </span><br><span class="line">mkdir cert &amp;&amp; cd cert #创建证书文件夹，并进入证书文件夹</span><br><span class="line">curl https://get.acme.sh | sh #安装acme</span><br><span class="line">apt install socat #安装socat</span><br><span class="line">ln -s  /root/.acme.sh/acme.sh /usr/local/bin/acme.sh #添加软链接</span><br><span class="line">acme.sh --register-account -m my@example.com #注册账号</span><br><span class="line">ufw allow 80 #开放80端口</span><br><span class="line">acme.sh  --issue -d 你的域名  --standalone -k ec-256 #申请证书</span><br><span class="line">bash ~/.acme.sh/acme.sh --issue -d 你的域名 --standalone -k ec-256 --listen-v6 #申请证书</span><br><span class="line">acme.sh --installcert -d 你的域名 --ecc  --key-file   /root/cert/private.key   --fullchain-file /root/cert/public.crt #安装证书</span><br><span class="line">acme.sh --set-default-ca --server letsencrypt #切换 Let’s Encrypt</span><br><span class="line">acme.sh --set-default-ca --server buypass #切换切换 Buypass</span><br><span class="line">acme.sh --set-default-ca --server zerossl # 切换 ZeroSSL</span><br><span class="line">bash ~/.acme.sh/acme.sh --list #查看目前申请到的证书</span><br><span class="line">bash ~/.acme.sh/acme.sh --renew -d 你的域名 --force --ecc #手动续期证书</span><br><span class="line">openssl ecparam -genkey -name prime256v1 -out ca.key #生成私钥</span><br><span class="line">openssl req -new -x509 -days 36500 -key ca.key -out ca.crt  -subj &quot;/CN=bing.com&quot; #生成公钥</span><br></pre></td></tr></table></figure><br><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>记得打开小云朵</p></div><br>3.安装Nginx<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nginx -y</span><br></pre></td></tr></table></figure><br>4.配置Nginx<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><br>Nginx配置(替换http{}里的内容):<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   listen [::]:443 ssl;</span><br><span class="line"></span><br><span class="line">   server_name 你的域名;  </span><br><span class="line">   ssl_certificate       /root/cert/public.crt; </span><br><span class="line">   ssl_certificate_key   /root/cert/private.key;</span><br><span class="line">   ssl_session_timeout 1d;</span><br><span class="line">   ssl_session_cache shared:MozSSL:10m;</span><br><span class="line">   ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line">   ssl_protocols         TLSv1.2 TLSv1.3;</span><br><span class="line">   ssl_ciphers           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line">   ssl_prefer_server_ciphers off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">       proxy_redirect off;</span><br><span class="line">       proxy_pass http://127.0.0.1:10000;</span><br><span class="line">       proxy_http_version 1.1;</span><br><span class="line">       proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">       proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">       proxy_set_header Host $host;</span><br><span class="line">       proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name 你的域名;   </span><br><span class="line">   rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>重新加载nginx配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx.service</span><br></pre></td></tr></table></figure><br>5.打开你的域名，看看效果吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="vps" scheme="https://altria5401.eu.org/categories/vps/"/>
    
    
    <category term="Nginx" scheme="https://altria5401.eu.org/tags/Nginx/"/>
    
    <category term="反代" scheme="https://altria5401.eu.org/tags/%E5%8F%8D%E4%BB%A3/"/>
    
  </entry>
  
  <entry>
    <title>甲骨文云刷实例教程</title>
    <link href="https://altria5401.eu.org/blog/f21377c6/"/>
    <id>https://altria5401.eu.org/blog/f21377c6/</id>
    <published>2022-05-23T12:59:27.000Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>甲骨文云作为全球最大服务器供应商之一，在其推出“always free”套餐后，引起了大家的广泛关注，大家纷纷注册甲骨文云，导致一些热门地区出现缺货现象，下面我将教大家如何用脚本自动刷实例教程，先人一步享用甲骨文云。</p><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一个甲骨文云账号<br>2.一台服务器</p><h1 id="部署实操"><a href="#部署实操" class="headerlink" title="部署实操"></a>部署实操</h1><p>1.<a href="https://www.oracle.com/cn/cloud/sign-in.html">登录甲骨文云</a>，按照以下步骤获取配置信息。<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/002.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/003.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/004.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/005.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/006.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/007.png" alt=""><br>2.打开finalshell，登录vps，获取管理员权限,安装oci-help脚本。<br>ubuntux系统<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">sudo apt -get uddate</span><br><span class="line">sudo apt install curl</span><br><span class="line">mkdir oci-help &amp;&amp; cd oci-help</span><br><span class="line">wget https://github.com/lemoex/oci-help/releases/download/v2.2.0/oci-help-linux-amd64-v2.2.0.zip</span><br><span class="line">unzip oci-help-linux-amd64-v2.2.0.zip</span><br></pre></td></tr></table></figure><br><div class="note info simple"><p>cenos 系统类似，下面不再赘述</p></div><br>3.打开oci-help.ini文件，进行如下配置。<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/008.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/009.png" alt=""><br>4.添加电报机器人提醒。<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/VPS/甲骨文云创建实例/010.png" alt=""><br>5.运行oci-help脚本<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./oci-help</span><br></pre></td></tr></table></figure><br><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>此法的缺点是一直要打开服务器</p></div><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">screen -S oci-help </span><br><span class="line">./oci-help</span><br><span class="line">ctrl + a + d</span><br><span class="line">screen -ls</span><br></pre></td></tr></table></figure><br>5.到此oci-help脚本部署完成，接下来就耐心等待机器人的通知</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="vps" scheme="https://altria5401.eu.org/categories/vps/"/>
    
    
    <category term="甲骨文云" scheme="https://altria5401.eu.org/tags/%E7%94%B2%E9%AA%A8%E6%96%87%E4%BA%91/"/>
    
    <category term="注册实例" scheme="https://altria5401.eu.org/tags/%E6%B3%A8%E5%86%8C%E5%AE%9E%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Heroku部署V2ray节点教程</title>
    <link href="https://altria5401.eu.org/blog/7e5e42c5/"/>
    <id>https://altria5401.eu.org/blog/7e5e42c5/</id>
    <published>2022-04-23T03:19:40.000Z</published>
    <updated>2024-03-29T14:37:08.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Heroku是一个支持多种编程语言的云容器。在这篇教程中，我们就一起来学习在Heroku这个免费的云容器上搭建V2ray节点，实现科学上网的需要。</p><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一个Heroku账号<br>2.一个Github账号<br>3.一个Cloudflare账号</p><h1 id="部署实操"><a href="#部署实操" class="headerlink" title="部署实操"></a>部署实操</h1><p>1.登录<a href="https://github.com/">Github</a>账号<br>2.Fork<a href="https://github.com/DaoChen6/Heroku-v2ray/">仓库</a>，并输入名称<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片1.png" alt=""><br>3.打开README.md文件，并修改原仓库地址为自己仓库的地址<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片2.png" alt=""><br>4.点击”Deploy to Heroku”<br>5.输入名称和UUID,没有可以从V2ray客户端生成一个，输入节点类型，点击”Deploy APP”等待部署完成<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片3.png" alt=""><br>6.登录<a href="https://dash.cloudflare.com/">Cloudflare</a>账号<br>7.点击Workers，点击”创建服务”<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片4.png" alt=""><br>8.更改名称，其他默认，点击”创建服务”按钮<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片5.png" alt=""><br>9.点击快速编辑<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片6.png" alt=""><br>10.复制以下代码，粘贴到Works中<br>单账号<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(</span><br><span class="line">    <span class="string">&quot;fetch&quot;</span>,<span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url=<span class="keyword">new</span> <span class="title function_">URL</span>(event.<span class="property">request</span>.<span class="property">url</span>);</span><br><span class="line">        url.<span class="property">hostname</span>=<span class="string">&quot;appname.herokuapp.com&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> request=<span class="keyword">new</span> <span class="title class_">Request</span>(url,event.<span class="property">request</span>);</span><br><span class="line">        event. <span class="title function_">respondWith</span>(</span><br><span class="line">            <span class="title function_">fetch</span>(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>双账号<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">SingleDay</span> = <span class="string">&#x27;app0.herokuapp.com&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DoubleDay</span> = <span class="string">&#x27;app1.herokuapp.com&#x27;</span></span><br><span class="line"><span class="title function_">addEventListener</span>(</span><br><span class="line">    <span class="string">&quot;fetch&quot;</span>,<span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">let</span> nd = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="keyword">if</span> (nd.<span class="title function_">getDate</span>()%<span class="number">2</span>) &#123;</span><br><span class="line">            host = <span class="title class_">SingleDay</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            host = <span class="title class_">DoubleDay</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> url=<span class="keyword">new</span> <span class="title function_">URL</span>(event.<span class="property">request</span>.<span class="property">url</span>);</span><br><span class="line">        url.<span class="property">hostname</span>=host;</span><br><span class="line">        <span class="keyword">let</span> request=<span class="keyword">new</span> <span class="title class_">Request</span>(url,event.<span class="property">request</span>);</span><br><span class="line">        event. <span class="title function_">respondWith</span>(</span><br><span class="line">            <span class="title function_">fetch</span>(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>11.点击”保存并部署”,并点击”发送”检验反代情况，如出现200OK即成功<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片7.png" alt=""><br>12.打开V2ray客户端，添加一个服务器，进行如下配置<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/容器云/Heroku/图片8.png" alt=""><br>13.部署完后，开始网上冲浪吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="容器云" scheme="https://altria5401.eu.org/categories/%E5%AE%B9%E5%99%A8%E4%BA%91/"/>
    
    
    <category term="V2ray" scheme="https://altria5401.eu.org/tags/V2ray/"/>
    
    <category term="节点" scheme="https://altria5401.eu.org/tags/%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
</feed>

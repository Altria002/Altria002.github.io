<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Speedtest项目搭建教程</title>
      <link href="/blog/8cc78405/"/>
      <url>/blog/8cc78405/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一个域名<br>2.一台vps</p><h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><p>1.连接vps，安装宝塔面板<br>Centos安装宝塔面板脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://v7.hostcli.com/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>ubuntu安装宝塔面板脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://v7.hostcli.com/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><div class="note info simple"><p>记得放行8888端口</p></div><p>2.打开<a href="https://dash.cloudflare.com/">cloudflare</a>,添加一个站点并增加一条A记录解析</p><div class="note info simple"><p>不要打开小云朵哦</p></div><p><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/speedtest%E6%B5%8B%E9%80%9F%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%872.png"><br>3.下载<a href="https://github.com/BadApple9/speedtest-x/archive/refs/tags/20201222.zip">speedtest源码</a>并解压<br>4.打开宝塔面板，输入账号密码登录，单击网站并添加站点，输入解析好的域名，其他默认<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/speedtest%E6%B5%8B%E9%80%9F%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%875.png"><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/speedtest%E6%B5%8B%E9%80%9F%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%873.png"></p><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>忘记账号密码可以在VPS输入bt default</p></div><p>5.打开网站，添加ssl证书，选上强制ssl<br>6.点击文件，找到网站文件夹，删除原有的内容，将解压后的文件粘贴到此处<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/speedtest%E6%B5%8B%E9%80%9F%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%874.png"><br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/speedtest%E6%B5%8B%E9%80%9F%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%876png"><br>7.将example-singleServer-pretty.html文件重命名为index.html，至此测速站完成搭建</p><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>如需自定义，可以对index.html文件编辑</p></div>]]></content>
      
      
      <categories>
          
          <category> vps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Speedtest </tag>
            
            <tag> 测速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/4a17b156/"/>
      <url>/blog/4a17b156/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Heroku部署V2ray节点教程</title>
      <link href="/blog/7e5e42c5/"/>
      <url>/blog/7e5e42c5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Heroku是一个支持多种编程语言的云容器。在这篇教程中，我们就一起来学习在Heroku这个免费的云容器上搭建V2ray节点，实现科学上网的需要。</p><h1 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h1><p>1.一个Heroku账号<br>2.一个Github账号<br>3.一个Cloudflare账号</p><h1 id="部署实操"><a href="#部署实操" class="headerlink" title="部署实操"></a>部署实操</h1><p>1.登录<a href="https://github.com/">Github</a>账号<br>2.Fork<a href="https://github.com/DaoChen6/Heroku-v2ray/">仓库</a>，并输入名称<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%871.png"><br>3.打开README.md文件，并修改原仓库地址为自己仓库的地址<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%872.png"><br>4.点击”Deploy to Heroku”<br>5.输入名称和UUID,没有可以从V2ray客户端生成一个，输入节点类型，点击”Deploy APP”等待部署完成<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%873.png"><br>6.登录<a href="https://dash.cloudflare.com/">Cloudflare</a>账号<br>7.点击Workers，点击”创建服务”<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%874.png"><br>8.更改名称，其他默认，点击”创建服务”按钮<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%875.png"><br>9.点击快速编辑<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%876.png"><br>10.复制以下代码，粘贴到Works中<br>单账号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(</span><br><span class="line">    <span class="string">&quot;fetch&quot;</span>,<span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url=<span class="keyword">new</span> <span class="title function_">URL</span>(event.<span class="property">request</span>.<span class="property">url</span>);</span><br><span class="line">        url.<span class="property">hostname</span>=<span class="string">&quot;appname.herokuapp.com&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> request=<span class="keyword">new</span> <span class="title class_">Request</span>(url,event.<span class="property">request</span>);</span><br><span class="line">        event. <span class="title function_">respondWith</span>(</span><br><span class="line">            <span class="title function_">fetch</span>(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>双账号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">SingleDay</span> = <span class="string">&#x27;app0.herokuapp.com&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DoubleDay</span> = <span class="string">&#x27;app1.herokuapp.com&#x27;</span></span><br><span class="line"><span class="title function_">addEventListener</span>(</span><br><span class="line">    <span class="string">&quot;fetch&quot;</span>,<span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">let</span> nd = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="keyword">if</span> (nd.<span class="title function_">getDate</span>()%<span class="number">2</span>) &#123;</span><br><span class="line">            host = <span class="title class_">SingleDay</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            host = <span class="title class_">DoubleDay</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> url=<span class="keyword">new</span> <span class="title function_">URL</span>(event.<span class="property">request</span>.<span class="property">url</span>);</span><br><span class="line">        url.<span class="property">hostname</span>=host;</span><br><span class="line">        <span class="keyword">let</span> request=<span class="keyword">new</span> <span class="title class_">Request</span>(url,event.<span class="property">request</span>);</span><br><span class="line">        event. <span class="title function_">respondWith</span>(</span><br><span class="line">            <span class="title function_">fetch</span>(request)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>11.点击”保存并部署”,并点击”发送”检验反代情况，如出现200OK即成功<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%877.png"><br>12.打开V2ray客户端，添加一个服务器，进行如下配置<br><img src="https://cdn.jsdelivr.net/gh/Altria002/blog-imgs@main/Pics/%E5%9B%BE%E7%89%878.png"><br>13.部署完后，开始网上冲浪吧</p>]]></content>
      
      
      <categories>
          
          <category> 容器云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V2ray </tag>
            
            <tag> 节点 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
